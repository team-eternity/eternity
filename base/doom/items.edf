//
// EDF for Eternity Engine v3.40.50
//
// DOOM Inventory Items
//

//=============================================================================
//
// Health Effects
//

healtheffect HealthBonus
{
  amount    1
  maxamount @superhealth
  +alwayspickup
}

healtheffect Medikit
{
  amount     25
  maxamount  @maxhealth
  lowmessage "$GOTMEDINEED"
}

healtheffect MegasphereHealth
{
  amount    @superhealth
  maxamount @superhealth
  +alwayspickup
  +sethealth
}

healtheffect Soulsphere
{
  amount    100
  maxamount @superhealth
  +alwayspickup
}

healtheffect Stimpack
{
  amount    10
  maxamount @maxhealth
}

//=============================================================================
//
// Armor Effects
//

armoreffect GreenArmor
{
  saveamount  100
  savefactor  1
  savedivisor 3   // 33% absorption (1/3)
  +setabsorption
}

armoreffect BlueArmor
{
  saveamount  200
  savefactor  1
  savedivisor 2   // 50% absorption (1/2)
  +setabsorption
}

armoreffect ArmorBonus
{
  saveamount    1
  savefactor    1
  savedivisor   3   // 33% absorption, if player has no armor
  maxsaveamount 200
  +alwayspickup
  +additive
  -setabsorption
}

// This armor is what is given when using IDFA or IDKFA cheats in DOOM.
// Changing the cheat armor factor in DeHackEd will change this armor in
// the following way:
// * saveamount will be set to class * 100
// * if class is <= 1, the absorption rate will be cut to 1/3
armoreffect IDFAArmor
{
  saveamount  200
  savefactor  1
  savedivisor 2
  +setabsorption
}

//=============================================================================
//
// Keys
//

artifact RedCard
{
  artifacttype Key
}

artifact RedSkull
{
  artifacttype Key
}

artifact YellowCard
{
  artifacttype Key
}

artifact YellowSkull
{
  artifacttype Key
}

artifact BlueCard
{
  artifacttype Key
}

artifact BlueSkull
{
  artifacttype Key
}

//=============================================================================
//
// DOOM Lockdefs
//

ifgametype("DOOM")

// Red Card lock
lockdef 1
{
  require  RedCard
  mapcolor "$mapcolor_rdor"

  message       "$PD_REDC"
  remotemessage "You need a red card to activate this object"
}

// Blue Card lock
lockdef 2
{
  require  BlueCard
  mapcolor "$mapcolor_bdor"

  message       "$PD_BLUEC"
  remotemessage "You need a blue card to activate this object"
}

// YellowCard lock
lockdef 3
{
  require  YellowCard
  mapcolor "$mapcolor_ydor"

  message       "$PD_YELLOWC"
  remotemessage "You need a yellow card to activate this object"
}

// Red Skull lock
lockdef 4
{
  require  RedSkull
  mapcolor "$mapcolor_rdor"

  message       "$PD_REDS"
  remotemessage "You need a red skull to activate this object"
}

// Blue Skull lock
lockdef 5
{
  require  BlueSkull
  mapcolor "$mapcolor_bdor"

  message       "$PD_BLUES"
  remotemessage "You need a blue skull to activate this object"
}

// Yellow Skull lock
lockdef 6
{
  require  YellowSkull
  mapcolor "$mapcolor_ydor"

  message       "$PD_YELLOWS"
  remotemessage "You need a yellow skull to activate this object"
}

// Red Card or Skull lock
lockdef 129
{
  any { keys: RedCard, RedSkull }
  mapcolor "$mapcolor_rdor"

  message       "$PD_REDK"
  remotemessage "$PD_REDO"
}

// Blue Card or Skull lock
lockdef 130
{
  any { keys: BlueCard, BlueSkull }
  mapcolor "$mapcolor_bdor"

  message       "$PD_BLUEK"
  remotemessage "$PD_BLUEO"
}

// Yellow Card or Skull lock
lockdef 131
{
  any { keys: YellowCard, YellowSkull }
  mapcolor "$mapcolor_ydor"

  message       "$PD_YELLOWK"
  remotemessage "$PD_YELLOWO"
}

// Copy of Red Card or Skull lock, for ZDoom comp
lockdef 132
{
  any { keys: RedCard, RedSkull }
  mapcolor "$mapcolor_rdor"

  message       "$PD_REDK"
  remotemessage "$PD_REDO"
}

// Copy of Blue Card or Skull lock, for ZDoom comp
lockdef 133
{
  any { keys: BlueCard, BlueSkull }
  mapcolor "$mapcolor_bdor"

  message       "$PD_BLUEK"
  remotemessage "$PD_BLUEO"
}

// Copy of Yellow Card or Skull lock, for ZDoom comp
lockdef 134
{
  any { keys: YellowCard, YellowSkull }
  mapcolor "$mapcolor_ydor"

  message       "$PD_YELLOWK"
  remotemessage "$PD_YELLOWO"
}

//
// BOOM three-key lock
//
// NB: This lock is subject to a compatibility hack when MBF demos are being
// played back; in that event, the YellowSkull's presence in the player's
// inventory will be inverted before the lock is activated, and then restored
// afterward.
//
lockdef 229
{
  any { keys: BlueCard,   BlueSkull   }
  any { keys: YellowCard, YellowSkull }
  any { keys: RedCard,    RedSkull    }

  message       "$PD_ALL3"
  remotemessage "You need all 3 keys to activate this object"
}

// BOOM six-key lock
lockdef 101
{
  require BlueCard
  require BlueSkull
  require YellowCard
  require YellowSkull
  require RedCard
  require RedSkull

  message       "$PD_ALL6"
  remotemessage "You need all 6 keys to activate this object"
}

endif()

//=============================================================================
//
// Ammo Types
//
// An artifact is defined for each distinct type of ammo the player can own,
// and ammoeffect definitions actually give ammo of those types when they are
// picked up.
//

artifact AmmoClip
{
  artifacttype   Ammo
  maxamount      200
  interhubamount  -1

  ammo.backpackamount     10
  ammo.backpackmaxamount 400
}

artifact AmmoShell
{
  artifacttype   Ammo
  maxamount      50
  interhubamount -1

  ammo.backpackamount      4
  ammo.backpackmaxamount 100
}

artifact AmmoCell
{
  artifacttype   Ammo
  maxamount      300
  interhubamount  -1

  ammo.backpackamount     20
  ammo.backpackmaxamount 600
}

artifact AmmoMissile
{
  artifacttype   Ammo
  maxamount      50
  interhubamount -1

  ammo.backpackamount      1
  ammo.backpackmaxamount 100
}

//=============================================================================
//
// Ammo Givers
//

ammoeffect Clip
{
  ammo       AmmoClip
  amount     10
  dropamount 5
}

ammoeffect ClipBox
{
  ammo   AmmoClip
  amount 50
}

ammoeffect Shell
{
  ammo   AmmoShell
  amount 4
}

ammoeffect ShellBox
{
  ammo   AmmoShell
  amount 20
}

ammoeffect Cell
{
  ammo   AmmoCell
  amount 20
}

ammoeffect CellPack
{
  ammo   AmmoCell
  amount 100
}

ammoeffect RocketAmmo
{
  ammo   AmmoMissile
  amount 1
}

ammoeffect RocketBox
{
  ammo   AmmoMissile
  amount 5
}

//=============================================================================
//
// Power Givers (All Doom powerups are NOT artefacts)
//

powereffect InvulnerabilitySphere
{
  duration 30
  type     PowerInvulnerable

  +overridesself
}

powereffect Berserk
{
  duration 1
  type     PowerStrength

  // Not permanent, because that sets duration to -1, and this counts up
  +overridesself
}

powereffect BlurSphere
{
  duration 60
  type     PowerPartialInvisibility

  +overridesself
}

powereffect RadSuit
{
  duration 60
  type     PowerIronFeet

  +overridesself
}

powereffect Allmap
{
  duration 1
  type     PowerAllmap

  -overridesself
  +permanent
}

powereffect Infrared
{
  duration 120
  type     PowerLightAmp

  +overridesself
}


