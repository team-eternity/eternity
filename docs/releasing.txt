When releasing a new version of Eternity, do the following:

1. Test demos: get EternityDemoTest from GitHub and follow the instructions there.

2. Update AUTHORS
    a. Look in github pull requests history for all successful pull requests since last release. Add
       the authors (by their nicknames) in AUTHORS under "Feature and Patch Contributors".

3. Update readme.txt
    a. Update version in "Filename" at the top.
    b. Update Release date at the top
    c. If new art: update Graphics in credits
    d. If new code got imported: update Significant Code Utilized From
    e. If new code libraries got imported: update Libraries and Utilities
    f. Same as in 1.a. update Feature and Patch Contributors
    g. If Eternity got a new hosting site, update Hosting
    h. Look in github issues history for successful completed ones and add the people (by nicknames)
       in Idea People and Beta Testers
    i. If anyone has been very helpful and supportive in the community, add to Friends of Team
       Eternity
    j. If new assets came up, update What is included
    k. If new IDE or coding tool came up, update Construction
    l. Update the Features New to Version
    m. Update Coming Soon with estimated expectations on next releases and clear whatever's finished
    n. Add a summary to Revision History.
    o. Add bugs fixed from changelog to Bugs Fixed, Known Issues.
    p. Update Known Issues at the bottom

4. For Windows:
  (NOTE: we now have GitHub Actions for Windows builds)
    a. Generate a clean build32 and build64 folder, using the CMake GUI, and selecting the proper
       Visual Studio generator
    b. Make each build for Release
    c. Look in past versions what other files they have, and add them accordingly.
    d. MAKE SURE THE user FOLDER IS EMPTY, SAVE FOR delete.me!
    e. Make ZIP files according to naming in readme.txt
    f. Test that it runs.

5. For Mac:
  (NOTE: even though we have GitHub Actions also for Mac, the product will be non-signed and fail 
  validation).
    a. Make *from scratch* (delete if existing) build-arm and build-intel folder.
    b. For the build-arm folder, run "cmake .. -G Xcode"
    c. For the build-intel folder, run
       "cmake .. -G Xcode -DCMAKE_OSX_ARCHITECTURES=x86_64 -DPNG_INTEL_SSE=on"
    d. Open each xcodeproj in Xcode. Go into project settings. For the eternity executable and
       ESPECIALLY the EternityLauncher target, set the developer team to your team and select
       "Automatically Manage Signing"
    e. Select EternityLauncher in the targets menu, then go to the Product menu and make an Archive.
       CAUTION: when prompted to change architecture, REFUSE! Let it only build for the target
       architecture.
    f. When archiving is finished, send the app for notarization, then export it.
    g. Look at how past version DMG files are set up, and add the text files accordingly. Then use
       Disk Utility to make the new DMGs. CAUTION: do NOT store the apps in DropBox, or it'll try to
       copy everything from symbolic links into your cloud!
    h. Test that it runs.

6. Once all is good, make a new git tag.

7. Publish on GitHub.

8. Go to the Eternity Wiki and:
    a. Update the Template:latest page
    b. Go into the "Eternity" page and add the new version there.

9. Post on the Doomworld forum about the new release (only update the existing thread if it's just a
   patch release).